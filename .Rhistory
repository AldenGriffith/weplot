# Downloads latest version of weplot
download.file(url = "https://raw.githubusercontent.com/AldenGriffith/weplot/main/current-version/weplot.R",
destfile= "weplot.R",
quiet = TRUE)
# Loads the weplot functions
source("weplot.R")
# D <- read_excel("Tioga WY21.xlsx")
#
#
# S.mod <- D %>% group_by(`Date Only`) %>% summarize_at("Solar mod", mean)
# load("Tioga Dana WY2020.RData")
# load("Tuolumne Dana WY2021.RData")
load("data/TUMC1_WY21.RData")
D <- TUMC1_WY21
# D$Hour <- hour(D$Date)
# D$DOY <- yday(D$Date)
# D$Date.Only <- as.Date(D$Date)
# DayMet <- read_csv("~/Wellesley Courses/ES 220/ES 220 S22/Labs/06/Snow Data/TIOC1 Tioga Dana WY20/Daymet Tioga WY20.csv",
#                    skip = 7)
#
#
# S <- WY20 %>% group_by(Date.Only) %>% summarize_at("Solar.mod", mean)
# S <- S[[2]]
#
# weplot(list(DayMet$`srad (W/m^2)`, S))
#
# plot(S)
# abline(h=330)
extract <- function(x){
for (i in 1:ncol(x)){
assign(names(x)[i], x[[i]], envir = parent.env(environment()))
}
}
extract(D)
#Model ----
# load("Lab 6 Data 2011.RData")
# weplot(y = list(S, S.mod[[2]]))
# T.Air <- Temp.mod
# S <- Solar.mod
# Precip <- Precip.mod
# Obs.SWE <- SWE.mod
S <- D %>% group_by(Date.Only) %>% summarize_at("Solar.mod", mean)
S <- S[[2]]
T.Air <- D %>% group_by(Date.Only) %>% summarize_at("Temp.mod", mean)
T.Air <- T.Air[[2]]
Precip <- D %>% group_by(Date.Only) %>% summarize_at("Precip.mod", sum)
Precip <- Precip[[2]]
Obs.SWE <- D %>% group_by(Date.Only) %>% summarize_at("SWE.mod", mean)
Obs.SWE <- Obs.SWE[[2]]
DOY <- D %>% group_by(Date.Only) %>% summarize_at("DOY", mean)
DOY <- DOY[[2]]
time.scale <- 1
# time.scale <- 1
#Input values
a <- 0.9  #albedo
q <- 0.5  #canopy cover (sublimation fudge factor)
TM <- 1.2/time.scale #temperature snowmelt coefficient
SM <- 0.2256/time.scale #solar snowmelt coefficient
IP <- 0*0.24/time.scale #intercept PET
TP <- 0.0135/time.scale #temp PET coefficient
SP <- 0.0352/time.scale #solar PET cofficient (1/28.4)
SWE <- 0
Time <- length(T.Air)  #length of loop (days)
#Define output objects
Snowfall <- numeric()
Rainfall <- numeric()
PET <- numeric()
Sublimation <- numeric()
Melt <- numeric()
for (t in 1:(Time)){
#calculate amount of snowfall and rainfall
if (T.Air[t] <= 0){
Snowfall[t] <- Precip[t]
Rainfall[t] <- 0
} else {
Snowfall[t] <- 0
Rainfall[t] <- Precip[t]
}
#Calculate PET
PET[t] <- (IP + TP*T.Air[t]) * (SP*S[t])
#Calculate Sublimation
Sublimation[t] <- q * 0.86 * PET[t]
if (Sublimation[t] < 0) Sublimation[t] <- 0
if (Sublimation[t] > SWE[t]) Sublimation[t] <- SWE[t]
#Calculate Meltwater
Melt[t] <- TM*T.Air[t] + SM*(1-a)*S[t]
#Can't have negative melt values
if (Melt[t] < 0){
Melt[t] <- 0
}
#Can snow melt below zero?
if (T.Air[t] < 0){
Melt[t] <- 0
}
if (Melt[t] > (SWE[t] - Sublimation[t])) Melt[t] <- SWE[t] - Sublimation[t]
#Update Snowpack SWE
SWE[t+1] <- SWE[t] + Snowfall[t] - Sublimation[t] - Melt[t]
}
SWE <- SWE[-1]
#Mass Balance Check
sum(Precip) - sum(Rainfall, Sublimation, Melt, SWE[Time])
# weplot(list(Snowfall, Snow.mod), type = "line", group.type = "panels")
weplot(list(SWE, Obs.SWE), type = "line", group.type = "color")
# weplot(list(Melt, D$Melt.mod), type = "line", group.type = "panels")
weplot(list(Obs.SWE, cumsum(Precip)), type = "line", group.type = "color")
weplot(list(SWE, Obs.SWE, cumsum(Snowfall), cumsum(Melt)), type = "line", group.type = "color")
# weplot(Date, SWE, type = "area")
# weplot(Date, S)
# weplot(Date, list(Snowfall, `Snow mod`), type = "line", group.type = "panels")
# weplot(Date, list(`Precip mod`, `Precip obs`), type = "line", group.type = "panels")
#
# weplot(Date, list(SWE, `SWE mod`), type = "line", group.type = "panels")
# Hour <- hour(Date)
# D$Hour <- hour(Date)
# weplot(data = D, x = Date, y = `Solar mod`, group = Hour,
#        color = c("black", "yellow"))
#Old plots ----
qplot(Date, SWE, geom = "area")
Snow <- data.frame(Date, Date, SWE, Obs.SWE)
Snow <- gather(Snow, key = "Type", value = "SWE", SWE, Obs.SWE)
qplot(x = Date, y = SWE, data = Snow, color = Type, geom = "line")
plot(x = Obs.SWE, y = SWE, xlab = "Observed SWE (mm)", ylab = "Modeled SWE (mm)")
abline(0,1)
mod = lm(SWE ~ Obs.SWE)
abline(mod, col="red")
# SWE.diff <- Obs.SWE - SWE
# Snow <- data.frame(Date, Date, SWE, SWE.diff)
# Snow <- gather(Snow, key = "Type", value = "SWE", SWE, SWE.diff)
#
# qplot(x = Date, y = SWE, data = Snow, fill = Type, geom = "area")
#
# qplot(x = Obs.SWE, y = SWE, color = Date)
#
#
# Balance <- data.frame(Date, SWE, cumsum(Precip), cumsum(Rainfall), cumsum(Melt), cumsum(Sublimation))
# names(Balance)[3:6] <- c("Precipitation", "Rainfall", "Meltwater", "Sublimation")
# Balance <- gather(Balance, key = "Variable", value = "Water", -1)
# qplot(Date, Water, data = Balance, color = Variable, geom = "line", size = I(1.2), ylab = "Water (mm)", main = "Mass Balance")
#
Balance.sum <- data.frame(Date, Precip = cumsum(Precip), Output = SWE + cumsum(Rainfall) + cumsum(Melt) + cumsum(Sublimation))
Balance.sum <- gather(Balance.sum, key = "Variable", value = "Water", Precip, Output)
qplot(Date, Water, data = Balance.sum, color = Variable, geom = "line", size = I(1.2), linetype = Variable, ylab = "Water (mm)", main = "Mass Balance")
melt.dates(SWE, Date)
setwd("~/Wellesley Courses/ES 220/ES 220 S22/Labs/06/Code")
library(readxl)
library(tidyverse)
library(scales)
library(lubridate)
library(stringr)
# Downloads latest version of weplot
download.file(url = "https://raw.githubusercontent.com/AldenGriffith/weplot/main/current-version/weplot.R",
destfile= "weplot.R",
quiet = TRUE)
# Loads the weplot functions
source("weplot.R")
load("Lab 6 Data 2021.RData")
# load("Lab 6 Data 2018-2021.RData")
load("Lab 6 functions.RData")
Temp <- Temp + 0
#Input values
a <- 0.83  #albedo
q <- 0.5  #canopy cover (sublimation fudge factor)
TM <- 1.2 #temperature snowmelt coefficient
SM <- 0.2256 #solar snowmelt coefficient
IP <- 0*0.24 #intercept PET
TP <- 0.0135 #temp PET coefficient
SP <- 0.0352 #solar PET cofficient (1/28.4)
SWE <- 0
Time <- length(Date)  #length of loop (days)
#Define output objects
Snowfall <- numeric()
Rainfall <- numeric()
PET <- numeric()
Sublimation <- numeric()
Melt <- numeric()
for (t in 1:(Time)){
#calculate amount of snowfall and rainfall
if (Temp[t] <= 0){
Snowfall[t] <- Precip[t]
Rainfall[t] <- 0
} else {
Snowfall[t] <- 0
Rainfall[t] <- Precip[t]
}
#Calculate PET
PET[t] <- (IP + TP*Temp[t]) * (SP*S[t])
#Calculate Sublimation
Sublimation[t] <- q * 0.86 * PET[t]
if (Sublimation[t] < 0) Sublimation[t] <- 0
if (Sublimation[t] > SWE[t]) Sublimation[t] <- SWE[t]
#Calculate Meltwater
Melt[t] <- TM*Temp[t] + SM*(1-a)*S[t]
#Can't have negative melt values
if (Melt[t] < 0){
Melt[t] <- 0
}
#Can snow melt below zero?
if (Temp[t] < 0){
Melt[t] <- 0
}
if (Melt[t] > (SWE[t] - Sublimation[t])) Melt[t] <- SWE[t] - Sublimation[t]
#Update Snowpack SWE
SWE[t+1] <- SWE[t] + Snowfall[t] - Sublimation[t] - Melt[t]
}
SWE <- SWE[1:Time]
#Mass Balance Check
sum(Precip) - sum(Rainfall, Sublimation, Melt, SWE[Time])
# weplot(x = Date, y = list(SWE.Observed, SWE), type = "line")
weplot(x = Date, y = SWE, type = "line", ylim = c(0,1000))
weplot(x = Date, y = cumsum(Melt), type = "line")
# weplot(x = SWE.Observed, y = SWE, xlab = "Observed SWE (mm)",
#        ylab = "Modeled SWE (mm)") +
#   geom_abline(intercept = 0, slope = 1) +
#   stat_smooth(method = lm, se = FALSE, color = "red")
#
# melt.dates(SWE, Date)
# melt.dates(SWE.Observed, Date)
weplot(x = Date, y = list(cumsum(Melt0), cumsum(Melt4)), type = "line", ylim = c(0,500))
weplot(x = Date, y = list(cumsum(Rain0), cumsum(Rain4)), type = "line", ylim = c(0,200))
weplot(Date, SWE, type = "line")
melt.dates(SWE, Date)
weplot(x = Date,
y = list(cumsum(Precip),
cumsum(Rainfall),
cumsum(Melt),
cumsum(Sublimation),
SWE),
type = "line",
size = 2,
group.names = c("In: Precipitation",
"Out: Rainfall",
"Out: Snowmelt",
"Out: Sublimation",
"Out: SWE"),
ylab = "Water (mm)",
title = "Mass Balance")
ggsave("Mass Balance.jpg")
weplot(x = Date, y = list(Precip, Melt), type = "line")
weplot(x = Date, y = list(Precip, Melt), type = "line", group.type = "panels")
weplot(x = Date, y = list(Melt, Precip), type = "line", group.type = "panels")
weplot(x = Date, y = list(Melt, Precip), type = "area", group.type = "panels")
d <- weplot(x = Date, y = list(Melt, Precip), type = "area", group.type = "panels", give.data = TRUE)
d
levels(d$Group)
d <- weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels", give.data = TRUE)
levels(d$Group)
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "boxplot", group.type = "color", give.data = TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "boxplot", group.type = "color", give.data = TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = TRUE)
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = TRUE)
levels(d$Group)
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE)
d
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE) +
geom_hline(yintercept = 0)
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE) +
geom_hline(yintercept = 0)
levels(d)
d <- weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels", give.data = TRUE)
levels(d)
levels(d$Group)
?str_replace_all
a <- c("a", "b")
a
a <- c("a", "a", "b", "b", "a")
a
str_replace_all(a, c("a", "b"), c("x", "y"))
fruits <- c("one apple", "two pears", "three bananas")
str_replace(fruits, "[aeiou]", "-")
?str_replace
a <- c("a", "a", "b", "b", "a")
str_replace_all(a, c("a", "b"), c("x", "y"))
fruits <- c("one apple", "two pears", "three bananas")
fruits <- c("one apple", "two pears", "three bananas")
fruits %>%
str_c(collapse = "---") %>%
str_replace_all(c("one" = "1", "two" = "2", "three" = "3"))
fruits %>%
str_c(collapse = "---") %>%
str_replace_all(c("one" = "1", "two" = "2", "three" = "3"))
fruits %>%
str_replace_all(c("one" = "1", "two" = "2", "three" = "3"))
?char_replace
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
group.names = c("_ridge", "_west"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
group.names = c("_ridge", "_west"), group.type = "panels")
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
group.names = c("_ridge", "_west"), group.type = "panels")
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
?factor
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = TRUE,
group.names = c("_ridge", "_west"))
d
levels(d$Group)
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = TRUE)#,
d
group.levels <- levels(d$Group)
group.levels
group.names <- c("_ridge", "_west")
for (i in 1:length(group.levels)) d$Group[d$Group == group.levels[i]] <- group.names[i]
group.levels <- levels(d$Group)
group.names <- c("_ridge", "_west")
for (i in 1:length(group.levels)){
d$Group <- as.character(d$Group)
d$Group[d$Group == group.levels[i]] <- group.names[i]
}
d
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = TRUE)#,
d$Group
group.levels <- levels(d$Group)
group.names <- c("_ridge", "_west")
1:length(group.levels)
d$Group <- as.character(d$Group)
d$Group
d$Group[d$Group == group.levels[i]]
group.names[i]
d$Group[d$Group == group.levels[i]] <- group.names[i]
d$Group
i <- 2
d$Group <- as.character(d$Group)
d$Group[d$Group == group.levels[i]] <- group.names[i]
d$Group
group.levels <- levels(d$Group)
group.names <- c("_ridge", "_west")
d$Group <- as.character(d$Group)
for (i in 1:length(group.levels)){
d$Group[d$Group == group.levels[i]] <- group.names[i]
}
d <- weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = TRUE)#,
group.levels <- levels(d$Group)
group.names <- c("_ridge", "_west")
d$Group <- as.character(d$Group)
for (i in 1:length(group.levels)){
d$Group[d$Group == group.levels[i]] <- group.names[i]
}
d$Group
d$Group <- factor(d$Group, levels = group.names)
d$Group
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
group.names = c("_ridge", "_west"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE)
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
d <- weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels", give.data = TRUE)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels", give.data = TRUE)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels")
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red", "yello"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red", "yellow"))
source('~/Wellesley Courses/ES 220/ES 220 S22/Labs/06/Snow Data/Lab 6 Final Test.R', echo=TRUE)
#Mass Balance Check
sum(Precip) - sum(Rainfall, Sublimation, Melt, SWE[Time])
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red", "yellow"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red", "yellow"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red", "yellow"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red", "yellow"))
rlang::last_error()
rlang::last_trace()
source('~/GitHub/weplot/weplot function dev 1.25.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red", "yellow"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red", "yellow"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "color", give.data = FALSE,
color = c("red"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red"))
?facet_warp
?facet_wrap
ggplot(data = Glacier, aes(x = Site, y = Size2, color = Location)) +
geom_boxplot()
ggplot(data = Glacier, aes(x = Site, y = Size2, fill = Location)) +
geom_boxplot()
ggplot(data = Glacier, aes(x = Site, y = Size2, fill = Location)) +
geom_boxplot() +
facet_wrap(~Location)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Size2, group = Site, data = Glacier)
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels")
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels")
weplot(x = Size2, group = Site, data = Glacier, group.type = "color")
ggplot(data = Glacier, aes(x = Size2, fill = Location)) +
geom_histogram() +
facet_wrap(~Location)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Size2, group = Site, data = Glacier, group.type = "color")
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels")
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"), edge.color = NA)
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels", edge.color = NA)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels", edge.color = NA)
weplot(x = Size2, group = Site, data = Glacier, group.type = "panels", edge.color = NA,
group.names = c("2", "4"))
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"), edge.color = NA)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"))
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"),
color = c("red", "blue"))
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"),
color = c("red", "blue"))
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "panels",
group.names = c("a", "b"))
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "color",
group.names = c("a", "b"))
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
weplot(x = Date, y = list(Precip, Melt), type = "area", group.type = "color",
group.names = c("a", "b"))
library(tidyverse)
load("~/Wellesley Courses/ES 220/ES 220 S22/Labs/04/Code/Lab 4 Data - Jan 6 2021.RData")
setwd("~/GitHub/weplot")
Glacier <- read_csv("Glacier Data Stacked.csv")
Hub <- read_csv("Hubbard Brook.csv")
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red"))
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red","purple"))
source('~/GitHub/weplot/weplot test code.R', echo=TRUE)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
source('~/GitHub/weplot/weplot function dev 1.26.R', echo=TRUE)
readline(prompt="Enter name: ")
yesno <- "y"
is.element(yesno, c("Y", "y", "yes", "Yes", "YES"))
source('~/GitHub/weplot/current-version/weplot.R', echo=TRUE)
weplot(x = Site, y = Size2, group = Location, data = Glacier,
type = "box", group.type = "panels", give.data = FALSE,
color = c("red","purple"))
source('~/GitHub/weplot/current-version/weplot.R', echo=TRUE)
